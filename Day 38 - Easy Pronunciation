#include <iostream>
#include <vector>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int x;
    cin >> x; 
    vector<long long> results; 
    while (x--) {
        int N;
        long long M;
        cin >> N >> M;  
        vector<long long> A(N);
        for (int i = 0; i < N; i++) {
            cin >> A[i];
        }

        long long max_distance = 0;

      
        for (int i = 0; i < N; i++) {
            max_distance += max(A[i] - 1, M - A[i]);
        }

        results.push_back(max_distance); 
    }

   
    for (const auto &res : results) {
        cout << res << "\n";
    }

    return 0;
}
#include <iostream>
#include <vector>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int T;
    cin >> T;  
    vector<long long> results;

    while (T--) {
        int N;
        long long M;
        cin >> N >> M;  
        vector<long long> A(N);
        for (int i = 0; i < N; i++) {
            cin >> A[i];
        }

        long long max_distance = 0;

       
        for (int i = 0; i < N; i++) {
            max_distance += max(A[i] - 1, M - A[i]);
        }

        results.push_back(max_distance);  
    }

   
    for (const auto &res : results) {
        cout << res << "\n";
    }

    return 0;
}
